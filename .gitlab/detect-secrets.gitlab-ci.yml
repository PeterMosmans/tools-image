---
# SPDX-License-Identifier: GPL-3.0-or-later
# (c) 2020-2024 Peter Mosmans [Go Forward]
#
# Detects secrets in modified files.
#
# Note that this tool expects the file BASELINE to be present in the root
# directory. If not, the job will fail.
#
# Variables:
# BASELINE          The baseline file of detect-secrets
# TOOLS_VERSION     Specifies which version of gofwd/tools-image is being used

detect-secrets:
  stage: .pre
  image: gofwd/tools-image:${TOOLS_VERSION}
  variables:
    GIT_STRATEGY: clone
    BASELINE: .secrets.baseline
  before_script:
    - >
      if [[ ! -f "${BASELINE}" ]]; then
      echo "The file ${BASELINE} does not exist";
      echo "Make sure to create and upload this first... exiting" ;
      exit 1 ;
      fi
    - >
      git config --global --add safe.directory ${CI_PROJECT_DIR} ;
      git checkout ${CI_COMMIT_BRANCH} ;
      mkdir -p reports &>/dev/null || true
  script:
    - >
      if [ "$CI_COMMIT_BEFORE_SHA" = "0000000000000000000000000000000000000000" ] ;
      then
      COMMIT_BEFORE_SHA=$(git rev-parse HEAD~1) ;
      else
      COMMIT_BEFORE_SHA=$CI_COMMIT_BEFORE_SHA ;
      fi;
      echo "Checking files between ${COMMIT_BEFORE_SHA} and ${CI_COMMIT_BEFORE_SHA}" ;
      echo "Checking the following files for secrets:
      $(git diff --name-only --diff-filter=d $COMMIT_BEFORE_SHA $CI_COMMIT_SHA)" ;
      git diff --name-only --diff-filter=d $COMMIT_BEFORE_SHA $CI_COMMIT_SHA |
      xargs detect-secrets-hook --baseline ${BASELINE} > reports/detect-secrets-report.txt
  # Always show report
  after_script:
    - cat reports/detect-secrets-report.txt
  artifacts:
    name: "$CI_JOB_NAME artifacts from $CI_PROJECT_NAME on $CI_COMMIT_REF_SLUG"
    when: always
    paths:
      - reports/detect-secrets-report.txt
