---
# Job template - to be used in a pipeline by including this file.
#
# Detects whether outdated and insecure libraries are in use by running Dependency-Check.
#
# Works best when the runner has a named volume for /usr/share/dependency-check/data
# e.g:  --docker-volumes dependency-check:/usr/share/dependency-check/data
#
# If the file CONFIGURATION/dependency-check-suppression.xml exists, use it as suppression
#
# Variables:
# CONFIGURATION      Directory where dependency-check-suppression.xml can be found
# DEPENDENCY_VERSION Specifies which version of owasp/dependency-check is being used

dependency-check:
  variables:
    GIT_STRATEGY: fetch
    DEPENDENCY_SUPPRESSION: "$CONFIGURATION/dependency-check-suppression.xml"
  extends: .security
  image:
    name: owasp/dependency-check:${DEPENDENCY_VERSION}
    entrypoint: [""]
  script:
    - mkdir -p reports &>/dev/null || true
    - >
      if [[ -f "${DEPENDENCY_SUPPRESSION}" ]]; then
      /usr/share/dependency-check/bin/dependency-check.sh
      --enableExperimental
      --exclude "**/*.tgz" --exclude "**/*.zip"
      --failOnCVSS 6
      --format HTML --format JSON
      --out reports
      --project ${CI_PROJECT_NAME}
      --scan .
      --suppression "${DEPENDENCY_SUPPRESSION}" ;
      else
      /usr/share/dependency-check/bin/dependency-check.sh
      --enableExperimental
      --exclude "**/*.tgz" --exclude "**/*.zip"
      --failOnCVSS 6
      --format HTML --format JSON
      --out reports
      --project ${CI_PROJECT_NAME}
      --scan . ;
      fi
  artifacts:
    name: "$CI_JOB_NAME artifacts from $CI_PROJECT_NAME on $CI_COMMIT_REF_SLUG"
    when: always
    paths:
      - reports/dependency-check-report.html
      - reports/dependency-check-report.json
  allow_failure: true
