---
# SPDX-License-Identifier: GPL-3.0-or-later
# (c) 2020-2024 Peter Mosmans [Go Forward]
#
# Executes SonarScanner and uploads results to SonarQube.
#
# Variables:
# SONAR_TOKEN        SonarQube access token
# SONAR_URL          Location of SonarQube
# TOOLS_VERSION      Specifies which version of gofwd/tools-image is being used

sonarqube:
  # Even though this is primarily a SAST tool, it uses build artifacts
  extends: .security
  # If external test results are included, their artifacts are required
  needs:
    - dependency-check
    - grype
    - hadolint
    - trivy
  variables:
    GIT_DEPTH: 1
    GIT_STRATEGY: fetch
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
  image:
    name: gofwd/tools-image:${TOOLS_VERSION}
    entrypoint: [""]
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - >
      sonar-scanner
      -Dsonar.dependencyCheck.htmlReportPath=reports/dependency-check-report.html
      -Dsonar.dependencyCheck.jsonReportPath=reports/dependency-check-report.json
      -Dsonar.docker.hadolint.reportPaths=reports/hadolint-report.json
      -Dsonar.exclusions=reports/**
      -Dsonar.grype.htmlReportPath=reports/grype-report.html
      -Dsonar.grype.reportPath=reports/grype-report.json
      -Dsonar.host.url=${SONAR_URL}
      -Dsonar.path.temp=${RUNNER_TEMP_PROJECT_DIR}
      -Dsonar.projectKey=${CI_PROJECT_TITLE}
      -Dsonar.sarifReportPaths=reports/trivy-report.sarif.json,reports/dependency-check-report.sarif
  rules:
    - if: "$SONAR_TOKEN != null"
      when: always
